{"ld":{"preview":["var = lambda vars : action"]},"le":{"preview":["LOGGER.error(msg)"]},"kwargs":{"preview":["**kwargs,"]},"addnarg":{"preview":["parser.add_argument(\"arg\", nargs=\"*\", default\"None, help=\"Help text\")"]},"li":{"preview":["LOGGER.info(msg)"]},"addarg":{"preview":["parser.add_argument(\"short_arg\", \"long_arg\", default=None, help=\"Help text\")"]},"testcase":{"preview":["class TestClass(unittest.TestCase):","","    \"\"\"Test case docstring.\"\"\"","","    def setUp(self):","        pass","","    def tearDown(self):","        pass","","    def test_name(self):","        pass"]},"lcp":{"preview":["[ for  in ]",""]},"kwg":{"preview":["self.var_name = kwargs.get('var_name', None)"]},"pudbr":{"preview":["from pudb.remote import set_trace","set_trace()"]},"lg":{"preview":["LOGGER.debug(msg)"]},"pudb":{"preview":["__import__('pudb').set_trace()"]},"pdb":{"preview":["__import__('pdb').set_trace()"]},"addaarg":{"preview":["parser.add_argument(\"arg\", \"long_arg\", action=\"store_true\", default=False, help=\"Help text\")"]},"ifee":{"preview":["if condition:","    pass","elif condition:","    pass","else:","    pass"]},"GMGPL":{"preview":["As a special exception, if other files instantiate generics from","this unit, or you link this unit with other files to produce an","executable, this unit does not by itself cause the resulting","executable to be covered by the GNU General Public License.","This exception does not however invalidate any other reasons why the","executable file might be covered by the GNU Public License.","",""]},"contain":{"preview":["def __len__(self):","    pass","","def __getitem__(self, key):","    pass","","def __setitem__(self, key, value):","    pass","","def __delitem__(self, key):","    pass","","def __iter__(self):","    pass","","def __reversed__(self):","    pass","","def __contains__(self, item):","    pass"]},"desc":{"preview":["def __get__(self, instance, owner):","    pass","","def __set__(self, instance, value):","    pass","","def __delete__(self, instance):","    pass"]},"todo":{"preview":["# TODO:  <14-03-20, yourname> #"]},"foldp":{"preview":["# Fold description {{{ #","Content","# }}} Fold description #"]},"\"":{"preview":["\"\"\"","doc","\"\""]},"diso":{"preview":["2020-03-14 20:41:04+0800"]},"clatin1":{"preview":["# -*- coding: latin-1 -*-"]},"addp":{"preview":["parser = argparse.ArgumentParser()"]},"'":{"preview":["'''","doc","''"]},"with":{"preview":["with expr as var:","    pass",""]},"repr":{"preview":["def __repr__(self):","    pass","","def __str__(self):","    pass","","def __unicode__(self):","    pass"]},"ipdb":{"preview":["__import__('ipdb').set_trace()"]},"fut":{"preview":["from __future__ import "]},".":{"preview":["self."]},"for":{"preview":["for item in iterable:","    pass"]},"slotclass":{"preview":["class MyClass(object):","","    \"\"\"Docstring for MyClass. \"\"\"","","    __slots__ = (,)","","    def __init__(self):","        \"\"\"TODO: to be defined. \"\"\"","        "]},"args":{"preview":["*args,"]},"MPL2":{"preview":["This Source Code Form is subject to the terms of the Mozilla Public","License, v. 2.0. If a copy of the MPL was not distributed with this","file, You can obtain one at http://mozilla.org/MPL/2.0/.",""]},"c)":{"preview":["Copyright © 2020 yourname. All Rights Reserved."]},"modeline":{"preview":["vim:set et sw=4 ts=8:"]},"ei":{"preview":["elif condition:","    "]},"dcp":{"preview":["{:  for  in }",""]},"el":{"preview":["else:","    "]},"iem":{"preview":["__import__('IPython').embed()"]},"lkwg":{"preview":["var_name = kwargs.get('var_name', None)"]},"ann":{"preview":["self.assertIsNotNone(expression)"]},"addsp":{"preview":["sub_parser = parser.add_subparsers().add_parser(\"name\")"]},"aae":{"preview":["self.assertAlmostEqual(first, second)"]},"box":{"preview":["#############","#  content  #","#############",""]},"attr":{"preview":["def __getattr__(self, name):","    pass","","def __setattr__(self, name, value):","    pass","","def __delattr__(self, name):","    pass"]},"wh":{"preview":["while condition:","    "]},"cmp":{"preview":["def __eq__(self, other):","    pass","","def __ne__(self, other):","    pass","","def __lt__(self, other):","    pass","","def __le__(self, other):","    pass","","def __gt__(self, other):","    pass","","def __ge__(self, other):","    pass","","def __cmp__(self, other):","    pass"]},"roprop":{"preview":["@property","def name(self):","    return self._name"]},"_":{"preview":["__init__"]},"ptpython":{"preview":["__import__('ptpython.repl', fromlist=('repl')).embed(globals(), locals(), vi_mode=False, history_filename=None)"]},"pprint":{"preview":["__import__('pprint').pprint()"]},"MIT":{"preview":["one line to give the program's name and a brief description","Copyright © 2020 yourname","","Permission is hereby granted, free of charge, to any person obtaining","a copy of this software and associated documentation files (the \"Software\"),","to deal in the Software without restriction, including without limitation","the rights to use, copy, modify, merge, publish, distribute, sublicense,","and/or sell copies of the Software, and to permit persons to whom the","Software is furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included","in all copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,","EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES","OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.","IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,","DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,","TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE","OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",""]},"getopt":{"preview":["try:","    # Short option syntax: \"hv:\"","    # Long option syntax: \"help\" or \"verbose=\"","    opts, args = getopt.getopt(sys.argv[1:], \"short_options\", [long_options])","","except getopt.GetoptError, err:","    # Print debug info","    print str(err)","    error_action","","for option, argument in opts:","    if option in (\"-h\", \"--help\"):","        ","    elif option in (\"-v\", \"--verbose\"):","        verbose = argument"]},"from":{"preview":["from module import Stuff"]},"ISC":{"preview":["one line to give the program's name and a brief description","Copyright © 2020, yourname","","Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.","","THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.",""]},"bbox":{"preview":["#######################################################################","#                               content                               #","#######################################################################",""]},"nosetrace":{"preview":["__import__('nose').tools.set_trace()"]},"context":{"preview":["def __enter__(self):","    pass","","def __exit__(self, exc_type, exc_value, traceback):","    pass"]},"imp":{"preview":["import module"]},"lw":{"preview":["LOGGER.warning(msg)"]},"BEERWARE":{"preview":["one line to give the program's name and a brief description","Copyright 2020 yourname","","Licensed under the \"THE BEER-WARE LICENSE\" (Revision 42):","yourname wrote this file. As long as you retain this notice you","can do whatever you want with this stuff. If we meet some day, and you think","this stuff is worth it, you can buy me a beer or coffee in return",""]},"tryf":{"preview":["try:","    pass","except Exception as e:","    raise e","finally:","    pass"]},"awith":{"preview":["async with expr as var:","    "]},"class":{"preview":["class MyClass(object):","","    \"\"\"Docstring for MyClass. \"\"\"","","    def __init__(self):","        \"\"\"TODO: to be defined. \"\"\"","        "]},"cl":{"preview":["class ClassName(object):","    \"\"\"docstring for ClassName\"\"\"","    def __init__(self, arg):","        super(ClassName, self).__init__()","        self.arg = arg","        "]},"foldc":{"preview":["# 1}}} #"]},"deff":{"preview":["def fname():","    "]},"adef":{"preview":["async def fname():","    \"\"\"docstring for fname\"\"\"","    "]},"def":{"preview":["def function(arg1):","    \"\"\"TODO: Docstring for function.","","    :arg1: TODO","    :returns: TODO","","    \"\"\"","    pass"]},"a=":{"preview":["self.assertEqual(, )"]},"LGPL3":{"preview":["One line to give the program's name and a brief description.","Copyright © 2020 yourname","","This library is free software; you can redistribute it and/or modify","it under the terms of the GNU Lesser General Public License as published","by the Free Software Foundation; either version 3 of the License, or","(at your option) any later version.","","This library is distributed in the hope that it will be useful,","but WITHOUT ANY WARRANTY; without even the implied warranty of","MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the","GNU Lesser General Public License for more details.","","You should have received a copy of the GNU Lesser General Public License","along with this library; if not, see <http://www.gnu.org/licenses/>.",""]},"tgwt":{"preview":["# given: ","# when: ","# then: "]},"GPL2":{"preview":["One line to give the program's name and a brief description.","Copyright © 2020 yourname","","This program is free software; you can redistribute it and/or modify","it under the terms of the GNU General Public License as published by","the Free Software Foundation; either version 2 of the License, or","(at your option) any later version.","","This program is distributed in the hope that it will be useful,","but WITHOUT ANY WARRANTY; without even the implied warranty of","MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the","GNU General Public License for more details.","","You should have received a copy of the GNU General Public License","along with this program; if not, see <http://www.gnu.org/licenses/>.",""]},"GPL3":{"preview":["one line to give the program's name and a brief description.","Copyright © 2020 yourname","","This program is free software: you can redistribute it and/or modify","it under the terms of the GNU General Public License as published by","the Free Software Foundation, either version 3 of the License, or","(at your option) any later version.","","This program is distributed in the hope that it will be useful,","but WITHOUT ANY WARRANTY; without even the implied warranty of","MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the","GNU General Public License for more details.","","You should have received a copy of the GNU General Public License","along with this program.  If not, see <http://www.gnu.org/licenses/>.",""]},"time":{"preview":["20:40"]},"property":{"preview":["def foo():","    doc = \"The foo property.\"","    def fget(self):","        return self._foo","    def fset(self, value):","        self._foo = value","    def fdel(self):","        del self._foo","    return locals()","foo = property(**foo())"]},"docs":{"preview":["\"\"\"","File: foo.py","Author: yourname","Email: yourname@email.com","Github: https://github.com/yourname","Description: ","\"\"\"",""]},"ifmain":{"preview":["if __name__ == \"__main__\":","    main()"]},"defc":{"preview":["@classmethod","def function(arg1):","    \"\"\"TODO: Docstring for function.","","    :arg1: TODO","    :returns: TODO","","    \"\"\"","    pass"]},"test":{"preview":["def test_description():","    "]},"rwprop":{"preview":["def name():","    \"\"\"TODO: Docstring for name.","","    :returns: TODO","","    \"\"\"","    def fget(self):","        return self._name","","    def fset(self, value):","        self._name = value","    return locals()","","name = property(**name(), doc=name.__doc__)"]},"defi":{"preview":["def __init__(self, args):","    "]},"defm":{"preview":["def mname(self, arg):","    "]},"AGPL":{"preview":["One line to give the program's name and a brief description.","Copyright © 2020 yourname","","This program  is free software: you can redistribute it and/or modify","it under the terms of the GNU Affero General Public License as","published by the Free Software Foundation, either version 3 of the","License, or (at your option) any later version.","","This program is distributed in the hope that it will be useful,","but WITHOUT ANY WARRANTY; without even the implied warranty of","MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the","GNU Affero General Public License for more details.","","You should have received a copy of the GNU Affero General Public License","along with this program. If not, see <http://www.gnu.org/licenses/>."]},"defs":{"preview":["@staticmethod","def function(arg1):","    \"\"\"TODO: Docstring for function.","","    :arg1: TODO","    :returns: TODO","","    \"\"\"","    pass"]},"ife":{"preview":["if condition:","    pass","else:","    pass"]},"pargs":{"preview":["\"return \"parser.parse_args()",""]},"lorem":{"preview":["","Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.",""]},"ae":{"preview":["self.assertEqual(first, second)"]},"af":{"preview":["self.assertFalse(expression)"]},"epydoc":{"preview":["\"\"\"Description","","@param param:  Description","@type  param:  Type","","@return:  Description","@rtype :  Type","","@raise e:  Description","\"\"\""]},"WTFPL":{"preview":["        DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE","                Version 2, December 2004","","Copyright 2020 yourname","","Everyone is permitted to copy and distribute verbatim or modified","copies of this license document, and changing it is allowed as long","as the name is changed.","","        DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE","TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION",""," 0. You just DO WHAT THE FUCK YOU WANT TO.","",""]},"rpdb":{"preview":["__import__('rpdb').set_trace()"]},"an":{"preview":["self.assertIsNone(expression)"]},"wdb":{"preview":["__import__('wdb').set_trace()"]},"date":{"preview":["2020-03-14"]},"ar":{"preview":["self.assertRaises(exception, func, arguments)"]},"cascii":{"preview":["# -*- coding: ascii -*-"]},"at":{"preview":["self.assertTrue(expression)"]},"AGPL3":{"preview":["one line to give the program's name and a brief description.","Copyright © 2020 yourname","","This program is free software: you can redistribute it and/or modify","it under the terms of the GNU Affero General Public License as","published by the Free Software Foundation, either version 3 of the","License, or (at your option) any later version.","","This program is distributed in the hope that it will be useful,","but WITHOUT ANY WARRANTY; without even the implied warranty of","MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the","GNU Affero General Public License for more details.","","You should have received a copy of the GNU Affero General Public License","along with this program.  If not, see <http://www.gnu.org/licenses/>.",""]},"cutf8":{"preview":["# -*- coding: utf-8 -*-"]},"uuid":{"preview":["b66445fc-c65f-4409-af2f-2b8d07c8a54b"]},"scp":{"preview":["{ for  in }",""]},"LGPL2":{"preview":["One line to give the program's name and a brief description.","Copyright © 2020 yourname","","This library is free software; you can redistribute it and/or modify","it under the terms of the GNU Lesser General Public License as published","by the Free Software Foundation; either version 2.1 of the License, or","(at your option) any later version.","","This library is distributed in the hope that it will be useful,","but WITHOUT ANY WARRANTY; without even the implied warranty of","MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the","GNU Lesser General Public License for more details.","","You should have received a copy of the GNU Lesser General Public License","along with this library; if not, see <http://www.gnu.org/licenses/>.",""]},"dowh":{"preview":["while True:","    ","    if condition:","        break"]},"try":{"preview":["try:","    pass","except Exception as e:","    raise e"]},"sk":{"preview":["@unittest.skip(skip_reason)",""]},"if":{"preview":["if condition:","    pass"]},"cla":{"preview":["class class_name:","    \"\"\"description\"\"\""]},"ddate":{"preview":["3月 14, 2020"]},"BSD2":{"preview":["one line to give the program's name and a brief description","Copyright © 2020 yourname","All rights reserved.","","Redistribution and use in source and binary forms, with or without","modification, are permitted provided that the following conditions are met:","1. Redistributions of source code must retain the above copyright","notice, this list of conditions and the following disclaimer.","2. Redistributions in binary form must reproduce the above copyright","notice, this list of conditions and the following disclaimer in the","documentation and/or other materials provided with the distribution.","","THIS SOFTWARE IS PROVIDED BY yourname ''AS IS'' AND ANY","EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED","WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE","DISCLAIMED. IN NO EVENT SHALL yourname BE LIABLE FOR ANY","DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES","(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;","LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND","ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT","(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS","SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","","The views and conclusions contained in the software and documentation","are those of the authors and should not be interpreted as representing","official policies, either expressed or implied, of yourname.",""]},"BSD3":{"preview":["one line to give the program's name and a brief description","Copyright © 2020 yourname","All rights reserved.","","Redistribution and use in source and binary forms, with or without","modification, are permitted provided that the following conditions are met:","1. Redistributions of source code must retain the above copyright","notice, this list of conditions and the following disclaimer.","2. Redistributions in binary form must reproduce the above copyright","notice, this list of conditions and the following disclaimer in the","documentation and/or other materials provided with the distribution.","3. Neither the name of the organization nor the","names of its contributors may be used to endorse or promote products","derived from this software without specific prior written permission.","","THIS SOFTWARE IS PROVIDED BY yourname ''AS IS'' AND ANY","EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED","WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE","DISCLAIMED. IN NO EVENT SHALL yourname BE LIABLE FOR ANY","DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES","(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;","LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND","ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT","(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS","SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",""]},"BSD4":{"preview":["one line to give the program's name and a brief description","Copyright © 2020 yourname","All rights reserved.","","Redistribution and use in source and binary forms, with or without","modification, are permitted provided that the following conditions are met:","1. Redistributions of source code must retain the above copyright","notice, this list of conditions and the following disclaimer.","2. Redistributions in binary form must reproduce the above copyright","notice, this list of conditions and the following disclaimer in the","documentation and/or other materials provided with the distribution.","3. All advertising materials mentioning features or use of this software","must display the following acknowledgement:","This product includes software developed by the organization.","4. Neither the name of the organization nor the","names of its contributors may be used to endorse or promote products","derived from this software without specific prior written permission.","","THIS SOFTWARE IS PROVIDED BY yourname ''AS IS'' AND ANY","EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED","WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE","DISCLAIMED. IN NO EVENT SHALL yourname BE LIABLE FOR ANY","DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES","(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;","LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND","ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT","(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS","SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",""]},"fold":{"preview":["# Fold description {{{1 #"]},"bpdb":{"preview":["__import__('bpdb').set_trace()"]},"datetime":{"preview":["2020-03-14 20:38"]},"#!2":{"preview":["#!/usr/bin/env python2","# -*- coding: utf-8 -*-"]},"#!3":{"preview":["#!/usr/bin/env python3"]},"adeff":{"preview":["async def fname():","    "]},"akw":{"preview":["*args, **kwargs,",""]},"trye":{"preview":["try:","    pass","except Exception as e:","    raise e","else:","    pass"]},"glog":{"preview":["import logging","LOGGER = logging.getLogger(__name__)"]},"adefm":{"preview":["async def mname(self, arg):","    ",""]},"tryef":{"preview":["try:","    pass","except Exception as e:","    raise","else:","    pass","finally:","    pass"]},"ret":{"preview":["return "]},"#!":{"preview":["#!/usr/bin/env python",""]},"clai":{"preview":["class class_name:","    \"\"\"description\"\"\"","    def __init__(self, args):","        "]},"doc":{"preview":["\"\"\"","doc","\"\"\""]},"numeric":{"preview":["def __add__(self, other):","    pass","","def __sub__(self, other):","    pass","","def __mul__(self, other):","    pass","","def __div__(self, other):","    pass","","def __truediv__(self, other):","    pass","","def __floordiv__(self, other):","    pass","","","def __mod__(self, other):","    pass","","def __divmod__(self, other):","    pass","","def __pow__(self, other):","    pass","","","def __lshift__(self, other):","    pass","","def __rshift__(self, other):","    pass","","def __and__(self, other):","    pass","","def __xor__(self, other):","    pass","","def __or__(self, other):","    pass","","","def __neg__(self):","    pass","","def __pos__(self):","    pass","","def __abs__(self):","    pass","","def __invert__(self):","    pass","","","def __complex__(self):","    pass","","def __int__(self):","    pass","","def __long__(self):","    pass","","def __float__(self):","    pass","","","def __oct__(self):","    pass","","def __hex__(self):","    pass","","","def __index__(self):","    pass","","def __coerce__(self, other):","    pass"]},"APACHE":{"preview":["one line to give the program's name and a brief description","Copyright 2020 yourname","","Licensed under the Apache License, Version 2.0 (the \"License\");","you may not use this file except in compliance with the License.","You may obtain a copy of the License at","","    http://www.apache.org/licenses/LICENSE-2.0","","Unless required by applicable law or agreed to in writing, software","distributed under the License is distributed on an \"AS IS\" BASIS,","WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","See the License for the specific language governing permissions and","limitations under the License.",""]},"dol":{"preview":["def __init__(self, *args, **kwargs):","    super(ClassName, self).__init__(*args, **kwargs)"]},"uni":{"preview":["def __unicode__(self):","    representation"]},"lc":{"preview":["LOGGER.critical(msg)"]}}
